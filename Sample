// Time Complexity : log(m*n);
// Space Complexity : o(1)
// Did this code successfully run on Leetcode :
// Any problem you faced while coding this : binary search


// Your code here along with comments explaining your approach
class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        
        int n = matrix.size();
        int m = matrix[0].size();
        
        int l = 0;
        int r = n*m -1;
        while(l<=r) {
            int mid = l+(r-l)/2;
            int i = mid/m;
            int j = mid%m;
            
            if(matrix[i][j] == target) {
                return true;
            } else if(matrix[i][j] > target) {
                r = mid -1;
            } else {
                l = mid +1;
            }
        }
         return false;
    }
};
